# Generated by Django 3.1.1 on 2020-11-10 16:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import main.validations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_categoryname', message='Category must be Alphabetic', regex='^[a-zA-Z\\s_-]*$')], verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_companytname', message='Company name must be Alphabetic', regex='^[a-zA-Z\\s_-]*$')], verbose_name='Name')),
                ('country', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_countryname', message='Country must be Alphabetic', regex='^[a-zA-Z\\s_-]*$')], verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, validators=[django.core.validators.RegexValidator(code='invalid_username', message='User name must be Alphanumerical', regex='^[a-zA-Z0-9\\s_-]*$')], verbose_name='Name')),
                ('email', models.EmailField(max_length=100, null=True, unique=True, verbose_name='Email')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_order', models.DateTimeField(auto_now_add=True)),
                ('complete', models.BooleanField(default=False, null=True)),
                ('transaction_id', models.CharField(max_length=200, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.customer')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Order',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('country', models.TextField()),
                ('image', models.ImageField(blank=True, default='placeholder.png', null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='placeholder.png', null=True, upload_to='media')),
                ('name', models.CharField(max_length=50, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_productname', message='Product name must be Alphabetic', regex='^[a-zA-Z0-9/\\s)(._-]*$')], verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Description')),
                ('shortSpecifications', models.TextField(max_length=500, null=True, verbose_name='Short specifications')),
                ('specifications', models.TextField(max_length=3000, null=True, verbose_name='Specifications')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[main.validations.validate_price], verbose_name='Price')),
                ('discount', models.PositiveSmallIntegerField(default=0, null=True, validators=[main.validations.validate_discount], verbose_name='Discount')),
                ('year', models.PositiveSmallIntegerField(default=2020, validators=[main.validations.validate_product_year], verbose_name='Year')),
                ('digital', models.BooleanField(default=False, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.category', verbose_name='Category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=30, null=True, validators=[django.core.validators.RegexValidator(code='invalid_countryname', message='Country must be Alphabetic', regex='^[a-zA-Z\\s_-]*$')], verbose_name='Country')),
                ('city', models.CharField(max_length=30, null=True, validators=[django.core.validators.RegexValidator(code='invalid_cityname', message='City must be Alphabetic', regex='^[a-zA-Z\\s_-]*$')], verbose_name='City')),
                ('state', models.CharField(max_length=30, null=True, validators=[django.core.validators.RegexValidator(code='invalid_statename', message='State must be Alphabetic', regex="^[a-zA-Z'\\s_-]*$")], verbose_name='State')),
                ('address', models.CharField(max_length=200, null=True, validators=[django.core.validators.RegexValidator(code='invalid_addressname', message='Address must be Alphanumerical', regex="^[a-zA-Z0-9',./\\s_-]*$")], verbose_name='Address')),
                ('zipcode', models.CharField(max_length=10, null=True, validators=[django.core.validators.RegexValidator(code='invalid_zipcodename', message='Zipcode must contains 5 digits', regex='(^\\d{5}$)|(^\\d{5}-\\d{4}$)')], verbose_name='Zipcode')),
                ('data_added', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.customer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.order')),
            ],
            options={
                'verbose_name': 'Shipping address',
                'verbose_name_plural': 'Shipping addresses',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=30)),
                ('text', models.TextField(max_length=5000, verbose_name='Review')),
                ('rate', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('New', 'New'), ('True', 'True'), ('False', 'False')], default='New', max_length=10)),
                ('data_added', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('data_added', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
        ),
        migrations.CreateModel(
            name='ImageItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, default='placeholder.png', null=True, upload_to='')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Product Gallery',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('text', models.TextField(max_length=5000, verbose_name='Message')),
                ('data_added', models.DateTimeField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.comment', verbose_name='Parent')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
    ]
